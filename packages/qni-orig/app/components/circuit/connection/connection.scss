.connection {
  @apply absolute;
  @apply border-#{$gate-color};

  &--top {
    @apply hidden;

    @each $nqubit in $nqubits {
      .circuit[data-nqubit="#{$nqubit}"] .gate--connected-with-lower-bit & {
        @apply block;
        @apply border-b-#{map-get($connection-width, $nqubit)};
        @apply right-0;
        @if $nqubit == 8 {
          top: -1px;
        } @else {
          @apply top-0;
        }

        @screen md {
          @apply border-b-0;
          right: unset;
          top: 0;
        }
      }

      .circuit[data-nqubit="#{$nqubit}"] .gate > & {
        @apply h-#{map-get($instruction-size, $nqubit) / 2};
        @apply -mr-#{map-get($instruction-size, $nqubit) / 2};
        @apply w-#{map-get($instruction-size, $nqubit)};
        right: -2px;

        @screen md {
          @apply border-l-#{$connection-width-base};
          @apply h-#{($instruction-size-base + $instruction-margin-base) / 2};
          @apply -mt-#{$instruction-margin-base / 2};
          @apply ml-#{$instruction-size-base / 2};

          right: unset;
          width: #{$connection-width-base}px;
          top: -#{$connection-width-base}px;
          left: -#{$connection-width-base}px;
        }
      }

      .circuit[data-nqubit="#{$nqubit}"] .instruction & {
        @screen md {
          @apply ml-#{$instruction-size-base / 2};
        }
      }
    }

    .circuit-preview .circuit .gate > & {
      @apply border-l-#{$connection-width-base};
      @apply h-#{($instruction-size-base + $instruction-margin-base) / 2};
      @apply -mt-#{$instruction-margin-base / 2};
      @apply ml-#{$instruction-size-base / 2};

      left: -#{$connection-width-base}px;
      top: -#{$connection-width-base}px;
      width: #{$connection-width-base}px;
    }

    .circuit-preview .circuit .instruction & {
      @apply ml-#{$instruction-size-base / 2};
    }
  }

  &--bottom {
    @apply hidden;

    .gate--connected-with-upper-bit & {
      @apply block;
    }

    @screen md {
      @apply bottom-0 left-0;
      right: unset;
    }

    @each $nqubit in $nqubits {
      .circuit[data-nqubit="#{$nqubit}"] .gate--connected-with-upper-bit & {
        @apply block;
        @apply border-b-#{map-get($connection-width, $nqubit)};
        @apply top-0;
        left: -#{map-get($connection-width, $nqubit) / 2}px;
        @if $nqubit == 8 {
          top: -1px;
        } @else {
          @apply top-0;
        }

        @screen md {
          @apply border-b-0;
          top: unset;
        }
      }

      .circuit[data-nqubit="#{$nqubit}"] .gate > & {
        @apply h-#{map-get($instruction-size, $nqubit) / 2};
        @apply -ml-#{map-get($instruction-margin, $nqubit)};
        @apply w-#{map-get($instruction-size, $nqubit) / 2 + map-get($instruction-margin, $nqubit)};
        left: -2px;

        @screen md {
          @apply -mb-#{$instruction-margin-base / 2};
          @apply border-l-#{$connection-width-base};
          @apply h-#{($instruction-size-base + $instruction-margin-base) / 2};
          @apply ml-#{$instruction-size-base / 2};
          @apply w-auto;

          bottom: -2px;
          left: -#{$connection-width-base}px;
        }
      }
    }

    .circuit-preview .circuit .gate > & {
      @apply -mb-#{$instruction-margin-base / 2};
      @apply border-l-#{$connection-width-base};
      @apply h-#{($instruction-size-base + $instruction-margin-base) / 2};
      @apply ml-#{$instruction-size-base / 2};
      @apply w-auto;

      bottom: -2px;
      left: -#{$connection-width-base}px;
      top: unset;
    }

    .circuit-preview .circuit .instruction & {
      @apply ml-#{$instruction-size-base / 2};
    }
  }
}
