.qubit-label {
  $self: &;
  $qubit-label-wire-length: ($instruction-size-base - $instruction-size-base) /
    2;
  $qubit-label-wire-length-mobile: 4;

  @apply flex justify-end;
  @apply relative;

  // Mobile
  @apply flex-col items-center;

  @screen md {
    @apply flex-row justify-end;
  }

  @each $nqubit in $nqubits {
    .circuit[data-nqubit="#{$nqubit}"] & {
      @apply w-#{map-get($instruction-size, $nqubit)};

      @screen md {
        @apply h-#{$instruction-size-base};
        @apply items-center;
        @apply mx-0;
        @apply w-16;
      }
    }

    .circuit[data-nqubit="#{$nqubit}"] &:nth-of-type(n + 2) {
      @apply mr-#{map-get($instruction-margin, $nqubit)};

      @screen md {
        @apply mr-0;
        @apply mt-#{$instruction-margin-base};
      }
    }

    .circuit-preview .circuit[data-nqubit="#{$nqubit}"] &:nth-of-type(n + 2) {
      @apply mr-0;
    }
  }

  .circuit-preview .circuit & {
    @apply flex-row items-center;
    @apply h-#{$instruction-size-base};
    @apply mx-0;
    @apply w-auto;
  }

  &:nth-of-type(n + 2) {
    .circuit-preview .circuit & {
      @apply mt-#{$instruction-margin-base};
    }
  }

  &__wire {
    @apply absolute;
    @apply border-#{$wire-inactive-color};

    @mixin wire($nqubit) {
      @apply border-l-#{$wire-width};
      @apply bottom-0 left-0;
      @apply h-#{$qubit-label-wire-length-mobile};
      @apply ml-#{$instruction-size-base / 2};
      @apply ml-#{map-get($instruction-size, $nqubit) / 2};
      left: -#{$wire-width / 2}px;
    }

    @mixin wire-md {
      @apply border-l-0;
      @apply border-t-#{$wire-width};
      @apply mt-#{$instruction-size-base / 2} ml-0;
      @apply right-0;
      @apply w-#{$qubit-label-wire-length};
      bottom: unset;
      left: unset;
      top: -#{$wire-width / 2}px;
    }

    @each $nqubit in $nqubits {
      .circuit[data-nqubit="#{$nqubit}"] & {
        @include wire($nqubit);

        @screen md {
          @include wire-md;
        }
      }
    }

    .circuit-preview #{$self} & {
      @include wire-md;
    }
  }

  &__value {
    @apply font-mono;
    @apply leading-none;
    @apply text-#{$qubit-label-font-color};

    @mixin label($nqubit) {
      @apply text-#{map-get($instruction-label-font-size, $nqubit)};
      @apply mb-#{$qubit-label-wire-length-mobile};
      writing-mode: vertical-lr;
    }

    @mixin label-md {
      @apply text-base;
      @apply mb-0;
      @apply mr-#{$qubit-label-wire-length + 2};
      writing-mode: horizontal-tb;
    }

    @each $nqubit in $nqubits {
      .circuit[data-nqubit="#{$nqubit}"] & {
        @include label($nqubit);

        @screen md {
          @include label-md;
        }
      }
    }

    .circuit-preview #{$self} & {
      @include label-md;
    }
  }
}
