.dropzone {
  $parent: &;

  @apply relative;

  &--palette {
    @apply w-#{$instruction-size-base};
    @apply h-#{$instruction-size-base};
    @apply mr-2;
  }

  &--circuit {
    @each $nqubit in $nqubits {
      .circuit[data-nqubit="#{$nqubit}"] & {
        @apply w-#{map-get($instruction-size, $nqubit)};
        @apply h-#{map-get($instruction-size, $nqubit) + map-get($instruction-size, $nqubit) / 2};

        @screen md {
          @apply w-#{$instruction-size-base + $instruction-size-base / 2};
          @apply h-#{$instruction-size-base};
          @apply mx-0;
        }
      }

      .circuit[data-nqubit="#{$nqubit}"] &:nth-of-type(n + 2) {
        @apply mr-#{map-get($instruction-size, $nqubit) / 2};

        @screen md {
          @apply mr-0;
          @apply mt-#{$instruction-size-base / 2};
        }
      }

      .circuit-preview .circuit[data-nqubit="#{$nqubit}"] &:nth-of-type(n + 2) {
        @apply mr-0;
      }
    }

    &:nth-of-type(n + 2) {
      @screen md {
        @apply mt-#{$instruction-margin-base};
      }
    }

    .circuit-preview .circuit & {
      @apply w-#{$instruction-size-base + $instruction-margin-base};
      @apply h-#{$instruction-size-base};
      @apply mx-0;
    }

    .circuit-preview &:nth-of-type(n + 2) {
      @apply mt-#{$instruction-margin-base};
    }
  }

  &--trash {
    @apply flex;
    @apply px-4 py-5;
  }
}
